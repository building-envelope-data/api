{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://www.buildingenvelopedata.org/schemas/v1/common.json",
  "title": "common definitions",
  "description": "Definitions which are used in several other schemas.",
  "$defs": {
    "webAddress": {
      "type": "string",
      "format": "uri",
      "description": "In extension to the validation keyword `hostname`, a `webAddress` includes a `scheme` like https and possibly a `path` like /folder/item. TODO: Add an additional regex which checks whether the uri contains a `hostname`."
    },
    "timestamp": {
      "type": "string",
      "format": "date-time"
    },
    "openEndedDateTimeRange": {
      "title": "Open-ended data and time range",
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "From beginning of time represented by `null`, or some date and time."
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "description": "Until some date and time, or end of time represented by `null`."
        }
      },
      "additionalProperties": false,
      "required": [],
      "minProperties": 1
    },
    "available": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest date at which it was available."
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "description": "The latest date at which it was available."
        }
      },
      "additionalProperties": false,
      "required": [],
      "minProperties": 1
    },
    "reference": {
      "title": "Refer to one standard or one publication.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "standard": {
              "$ref": "#/$defs/standard",
              "description": "The standard refered to."
            }
          },
          "additionalProperties": false,
          "required": ["standard"]
        },
        {
          "type": "object",
          "properties": {
            "publication": {
              "$ref": "#/$defs/publication",
              "description": "The publication refered to."
            }
          },
          "additionalProperties": false,
          "required": ["publication"]
        }
      ]
    },
    "publication": {
      "type": "object",
      "properties": {
        "identifiers": {
          "title": "For publications, there cannot be a single institution guaranteeing the uniqueness of ids. Therefore, several options to define a publication are presented starting with the most important ones.",
          "type": "object",
          "properties": {
            "doi": {
              "type": "string",
              "pattern": "^(10[.][0-z/.]*)$",
              "description": "The Digital Object Identifier (DOI) is a very important persistent identifier for publications. It MUST be defined here if it is available for a publication. TODO: Improve the regex pattern to further restrict the string."
            },
            "arXiv": {
              "type": "string",
              "pattern": "^(arXiv:)[0-z./]*$",
              "description": "arXiv.org is a free and open-access archive for publications. The arXiv identifier can be used to define a publication. TODO: Improve the regex pattern to further restrict the string."
            },
            "urn": {
              "type": "string",
              "pattern": "^(urn:)[0-z:./-]*$",
              "description": "A Uniform Resource Name (URN) can be used to define a publication. TODO: Improve the regex pattern to further restrict the string."
            },
            "webAddress": {
              "$ref": "#/$defs/webAddress",
              "description": "If a persistent identifiert like DOI is defined above, this webAdress can define a convenient web address to access the publication. However, if no persistent identifier exist, this web address is the only identifier of this publication. In this case, it is important to choose a web address with a high probability to persist long."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "title": {
          "type": "string",
          "description": "The title of the publication"
        },
        "abstract": {
          "type": "string",
          "description": "The abstract of the publication"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "stakeholder.json#/$defs/person",
            "description": "Persons who authored the publication."
          },
          "minItems": 1
        },
        "section": {
          "title": "Referenced section",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": ["identifiers"]
    },
    "standard": {
      "title": "Standards are a special kind of publications. Therefore their data structure is different from publications.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "identifier.json#/$defs/central",
          "description": "The id represents this specific standard."
        },
        "title": {
          "type": "string",
          "description": "The full title of the standard"
        },
        "abstract": {
          "type": "string",
          "description": "The abstract of the standard"
        },
        "standardizers": {
          "type": "array",
          "items": {
            "title": "Acronyms or abbreviations of standardization institutions",
            "description": "Additional information about each standardization institution are stored in the metabase.",
            "type": "string",
            "enum": [
              "AERC",
              "AGI",
              "ASHRAE",
              "BREEAM",
              "BS",
              "BSI",
              "CEN",
              "CENELEC",
              "CIE",
              "DGNB",
              "DIN",
              "DVWG",
              "IEC",
              "IES",
              "ift",
              "ISO",
              "JIS",
              "LEED",
              "NFRC",
              "Riba",
              "UL",
              "UNECE",
              "VDI",
              "VFF",
              "WELL"
            ]
          },
          "minItems": 1,
          "description": "Standards typically do not name authors, but an institution or several institutions which created the standard. The institutions are identified by their acronym or abbreviation."
        },
        "numeration": {
          "type": "object",
          "properties": {
            "prefix": {
              "type": "string"
            },
            "mainNumber": {
              "type": "integer",
              "minimum": 0,
              "maximum": 10000000
            },
            "suffix": {
              "type": "integer",
              "minimum": 0,
              "maximum": 10000
            }
          },
          "additionalProperties": false,
          "description": "A standard may be named `ISO 52022-1` or `ASTM E2387`. While `ISO` and `ASTM` are the acronyms for the standardizers, `52022` and `2387` are the main numbers. `E` is the prefix and `1` is the postfix which may indicate for example a part number. This classification facilitates the search, because there are multiple ways to refer to a standard.",
          "required": ["mainNumber"]
        },
        "year": {
          "type": "integer",
          "minimum": 1800,
          "maximum": 2200,
          "description": "It is important to define the year in which the standard was issued because there can be relevant updates of one standard."
        },
        "section": {
          "type": "string",
          "description": "The section of the standard to which the reference refers to."
        }
      },
      "additionalProperties": false,
      "required": ["standardizers", "numeration"],
      "description": "`ISO 52022` is an example of the abbreviation of a standardizer and the main number of the identifier."
    },
    "currentVoltage": {
      "title": "The current-voltage characteristic can be important for example for photovoltaics.",
      "type": "object",
      "properties": {
        "I": {
          "$ref": "number.json#/$defs/ampere",
          "description": "The electric current in amperes."
        },
        "V": {
          "$ref": "number.json#/$defs/volt",
          "description": "The electric potential difference in volts."
        }
      },
      "additionalProperties": false,
      "required": ["I", "V"]
    },
    "approvals": {
      "title": "Institutions can approve data with cryptographic signatures which among other things can be used to ensure integrity and authenticity of data. The same data may be approved by several institutions.",
      "type": "array",
      "items": {
        "$ref": "common.json#/$defs/approval"
      },
      "minItems": 1
    },
    "approval": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "identifier.json#/$defs/decentral",
          "description": "The id represents this approval."
        },
        "approver": {
          "$ref": "identifier.json#/$defs/central",
          "description": "This id represents The stakeholder who approved the data."
        },
        "verify": {
          "$ref": "common.json#/$defs/approvalVerification",
          "description": "How the approval can be verified."
        },
        "signature": {
          "type": "string",
          "description": "The cryptographic signature of the approved data."
        },
        "createdAt": {
          "$ref": "common.json#/$defs/timestamp",
          "description": "When the approval was created"
        }
      },
      "additionalProperties": false,
      "required": ["approver"]
    },
    "approvalVerification": {
      "title": "How to verify the approval",
      "type": "object",
      "properties": {
        "website": {
          "$ref": "common.json#/$defs/webAddress",
          "description": "The URL of the website where the approval can be verified."
        },
        "description": {
          "type": "string",
          "description": "Explanation how the approval can be verified"
        }
      },
      "additionalProperties": false,
      "required": []
    },
    "angles": {
      "title": "Angles which are helpful to characterize building envelopes.",
      "$defs": {
        "tilt": {
          "$ref": "number.json#/$defs/degreeWithUncertainty",
          "description": "For horizontal slats, the slat tilt angle is measured from the horizontal plane. 0° means fully open slats and 70° almost closed slats."
        },
        "maximumClosing": {
          "$ref": "number.json#/$defs/degreeWithUncertainty",
          "description": "The maximum closing angle is the highest possible slat tilt angle, typically because the slats touch each other."
        }
      }
    },
    "efficiencies": {
      "title": "Definitions of effiencies for the conversion of energy.",
      "$defs": {
        "photovoltaic": {
          "$ref": "number.json#/$defs/numberBetweenZeroAndOneWithUncertainty",
          "description": "The photovoltaic efficiency of a component which uses irradiance to provide electric power."
        },
        "solarThermal": {
          "$ref": "number.json#/$defs/numberBetweenZeroAndOneWithUncertainty",
          "description": "The solar thermal efficiency of a component which uses irradiance to provide heat."
        },
        "inverter": {
          "$ref": "number.json#/$defs/numberBetweenZeroAndOneWithUncertainty",
          "description": "The efficiency of an inverter which converts for example direct current into alternating current."
        }
      }
    },
    "getHttpsResource": {
      "title": "GET HTTP(S) resource",
      "description": "HTTP resource with meta information requestable through the protocol [HTTP over TLS](https://tools.ietf.org/html/rfc2818) with `GET` requests. The protocol is colloquially called Hypertext Transfer Protocol Secure (HTTPS) and uses [Transport Layer Security (TLS)](https://tools.ietf.org/html/rfc8446) to secure [Hypertext Transfer Protocol (HTTP)](https://tools.ietf.org/html/rfc7231) connections over the internet.\n\nIf an HTTP `GET` request of the resource is [successful](https://tools.ietf.org/html/rfc7231#section-6.3) with [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6) [200](https://tools.ietf.org/html/rfc7231#section-6.3.1), the response message body is the resource's content. Otherwise, there is some issue that can be identified and hopefully resolved by examining the status code.\n\nNote that the [Internet Assigned Numbers Authority (IANA)](https://www.iana.org) maintains the [HTTP status code registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml). See also [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description"
        },
        "hashValue": {
          "$ref": "string.json#/$defs/sha256Hash",
          "description": "Hash value of sucessful HTTP response message body with [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6) [200](https://tools.ietf.org/html/rfc7231#section-6.3.1) computed with Secure Hash Algorithm 256 (SHA-256) as described in the [United States's Federal Information Processing Standard 180-4 (FIPS 180-4)](https://csrc.nist.gov/publications/detail/fips/180/4/final) by the [National Institute of Standards and Technology (NIST)](https://www.nist.gov). See also [RFC 6234](https://tools.ietf.org/html/rfc6234)."
        },
        "locator": {
          "$ref": "common.json#/$defs/webAddress",
          "description": "Locator with scheme `https` to be used with protocol [HTTP over TLS](https://tools.ietf.org/html/rfc2818)."
        },
        "format": {
          "$ref": "#/$defs/dataFormat",
          "description": "Data format of successful HTTP response message body with [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6) [200](https://tools.ietf.org/html/rfc7231#section-6.3.1)."
        },
        "archivedFilesMetaInformation": {
          "description": "Archived files meta information with relative paths from the archive root and data format specifications. In case the data format is not an archive, the list is empty. Otherwise, in case the data format is an, for our purposes, underspecified archive format like [7-Zip](https://www.7-zip.org) with an a priori unknown internal structure, for each archived file, there is exactly one list entry.\n\nNote that the [extensions of file names](https://en.wikipedia.org/wiki/Filename_extension) in the archive are not sufficient as data format because file extensions are not standardized and not sufficiently precise. For example, the extension `docx` is commonly used for documents with the media type [application/vnd.openxmlformats-officedocument.wordprocessingml.document](https://www.iana.org/assignments/media-types/application/vnd.openxmlformats-officedocument.wordprocessingml.document) but does not tell which exact version of the standard is meant.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/fileMetaInformation"
          },
          "minItems": 0
        }
      },
      "additionalProperties": false,
      "required": [
        "hashValue",
        "locator",
        "format",
        "archivedFilesMetaInformation"
      ]
    },
    "dataFormat": {
      "title": "Data format",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "identifier.json#/$defs/central",
          "description": "Central identifier"
        },
        "timestamp": {
          "$ref": "common.json#/$defs/timestamp",
          "description": "Timestamp that designates the version"
        },
        "name": {
          "title": "Full name",
          "type": "string"
        },
        "abbreviation": {
          "title": "Abbreviation",
          "$ref": "string.json#/$defs/abbreviation"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "reference": {
          "$ref": "common.json#/$defs/reference",
          "description": "Reference to standard or publication in which the present format is defined."
        },
        "mediaType": {
          "title": "Media Type",
          "description": "Media type as specified in the [Request for Comments (RFC)](https://www.ietf.org/rfc/) publication [RFC6838](https://tools.ietf.org/html/rfc6838) by the [Internet Engineering Task Force (IETF)](https://www.ietf.org) and listed in the registry [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml) maintained by the [Internet Assigned Numbers Authority (IANA)](https://www.iana.org), for example, [`application/json`](https://www.iana.org/assignments/media-types/application/json) for content in [JavaScript Object Notation (JSON)](https://tools.ietf.org/html/rfc7159) or [`text/xml; charset=\"utf-8\"`](https://www.iana.org/assignments/media-types/text/xml) for content in [Extensible Markup Language (XML)](https://www.w3.org/TR/2008/REC-xml-20081126/) encoded in [8-bit Unicode Transformation Format (UTF-8)](https://tools.ietf.org/html/rfc3629).\n\nNote that the media type [`application/json`](https://www.iana.org/assignments/media-types/application/json) is considered binary and does not support the parameter `charset`. The reason is that JSON content shall be encoded in UTF-8, UTF-16, or UTF-32, see [RFC7159, Section 8.1](https://tools.ietf.org/html/rfc7159#section-8.1), and thus as explained in section 3 of [RFC4627](https://www.ietf.org/rfc/rfc4627.txt) it is possible to determine whether an octet stream is UTF-8, UTF-16, or UTF-32.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": ["id"]
    },
    "fileMetaInformation": {
      "type": "object",
      "properties": {
        "path": {
          "title": "Relative file path",
          "type": "array",
          "items": {
            "title": "File path component",
            "description": "Either a directory name or a file name.",
            "type": "string",
            "pattern": "^[a-z0-9-._]+$"
          },
          "minItems": 1
        },
        "format": {
          "title": "Data format",
          "$ref": "#/$defs/dataFormat"
        }
      },
      "additionalProperties": false,
      "required": ["path", "format"]
    },
    "possiblePositions": {
      "title": "The locations where a component can be used",
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["exterior", "asBuildingEnvelope", "inBetween", "interior"],
        "description": "(i) 'exterior' means that the component can be used on the external side of the building envelope. (ii) 'asBuildingEnvelope' means that the component can be used as building envelope without any additional components. (iii) 'inBetween' means that the component can be used within building envelope for example between two glass panes. (iv) 'interior' means that the component can be used on the internal side of the building envelope."
      },
      "uniqueItems": true,
      "minItems": 1
    }
  }
}
