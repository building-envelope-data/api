{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/building-envelope-data/api/v1.0.0/schemas/photovoltaicData.json",
  "title": "photovoltaic data",
  "description": "Data about components of building envelopes which contribute to convert irradiance into electricity. A photovoltaic system is usually assembled of many components, for example photovoltaic modules.",
  "$defs": {
    "data": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "module": {
              "$ref": "#/$defs/module",
              "description": "Components which turn irradiance into direct current."
            }
          },
          "additionalProperties": false,
          "required": ["module"]
        },
        {
          "type": "object",
          "properties": {
            "inverter": {
              "$ref": "#/$defs/inverter",
              "description": "Components which can convert direct current to alternating current."
            }
          },
          "additionalProperties": false,
          "required": ["inverter"]
        },
        {
          "type": "object",
          "properties": {
            "system": {
              "$ref": "#/$defs/system",
              "description": "A photovoltaic system which can consist of photovoltaic modules and inverters."
            }
          },
          "additionalProperties": false,
          "required": ["system"]
        }
      ]
    },
    "module": {
      "title": "A photovoltaic module consists of photovoltaic cells which are connected and turn irradiance into electric power.",
      "type": "object",
      "properties": {
        "cellTypes": {
          "title": "The type of cells used in the module",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents one type of photovoltaic cells."
              },
              "description": {
                "type": "string",
                "description": "This string can explain the cell to humans."
              },
              "efficiency": {
                "$ref": "number.json#/$defs/numberBetweenZeroAndOne",
                "description": "The effiency of the cell is measured at standard test conditions."
              },
              "power": {
                "type": "object",
                "properties": {
                  "nominal": {
                    "$ref": "number.json#/$defs/wattWithUncertainty",
                    "description": "The nominal power of the cell is measured independently at standard test conditions in watts."
                  },
                  "effective": {
                    "$ref": "number.json#/$defs/wattWithUncertainty",
                    "description": "The effective nominal power of a cell is the nominal power of the module divided by the number of cells."
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "required": []
              },
              "width": {
                "$ref": "number.json#/$defs/meterWithUncertainty",
                "description": "If the cell has more or less the form of a square, then the width between two parallel sides is helpful to calculate how many cells fit into one module."
              },
              "currentVoltage": {
                "type": "array",
                "items": {
                  "$ref": "common.json#/$defs/currentVoltage",
                  "description": "The current-voltage characteristic is important to calculate the photovoltaic performance for conditions other than the standard test conditions."
                },
                "minItems": 1
              },
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "amorphous",
                    "arsenide",
                    "cadmium",
                    "concentrated",
                    "copper",
                    "crystalline",
                    "dyeSensitized",
                    "gallium",
                    "germanium",
                    "hybrid",
                    "indium",
                    "luminescent",
                    "micromorph",
                    "monocrystalline",
                    "multiJunction",
                    "nanocrystalline",
                    "organic",
                    "perovskite",
                    "plasmonic",
                    "polycrystalline",
                    "quantumDot",
                    "selenide",
                    "silicon",
                    "solidState",
                    "telluride",
                    "thinFilm",
                    "wafer"
                  ],
                  "description": "A photovoltaic cell can have one or more of these categories. For example, Copper indium gallium selenide photovoltaic is a thin film and solid state photovoltaic technology and would be described by the corresponding six items in the array."
                },
                "uniqueItems": true,
                "minItems": 0
              }
            },
            "additionalProperties": false,
            "required": ["id"]
          },
          "minItems": 1
        },
        "cellPattern": {
          "type": "object",
          "properties": {
            "rectangular": {
              "title": "If the building-integrated photovoltaic module is rectangular with the same amount of cells in each row and the same distances between them, then the geometry can be described here. 'longitudinal' is the direction with the larger number of cells and 'transversal' with the smaller number of cells.",
              "type": "object",
              "properties": {
                "longitudinal": {
                  "title": "'longitudinal' is the direction with the larger number of cells.",
                  "type": "object",
                  "properties": {
                    "cellNumber": {
                      "$ref": "number.json#/$defs/nonNegativeIntegerWithUncertainty",
                      "description": "The number of cells in the longitudinal direction."
                    },
                    "spacing": {
                      "$ref": "number.json#/$defs/meterWithUncertainty",
                      "description": "The distance between two neighboring cells in the longitudinal direction and in metre (m)."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["cellNumber"]
                },
                "transversal": {
                  "title": "'transversal' is the direction with the smaller number of cells.",
                  "type": "object",
                  "properties": {
                    "cellNumber": {
                      "$ref": "number.json#/$defs/nonNegativeIntegerWithUncertainty",
                      "description": "The number of cells in the transversal direction."
                    },
                    "spacing": {
                      "$ref": "number.json#/$defs/meterWithUncertainty",
                      "description": "The distance between two neighboring cells in the transversal direction and in metre (m)."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["cellNumber"]
                }
              },
              "additionalProperties": false,
              "required": ["longitudinal", "transversal"]
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "cells": {
          "title": "The cells of the module.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/decentral",
                "description": "The id is used to connect this specific cell to other parts of the module."
              },
              "cellType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents one of the `cellTypes`."
              }
            },
            "additionalProperties": false,
            "required": ["id", "cellType"]
          },
          "minItems": 1
        },
        "diodeTypes": {
          "title": "The type of diodes which are used in the the photovoltaic module.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents a type of diodes which is used in the the photovoltaic module."
              },
              "description": {
                "type": "string",
                "description": "This string can explain the diode type to humans."
              }
            },
            "additionalProperties": false,
            "minProperties": 1,
            "required": []
          },
          "minItems": 0
        },
        "diodes": {
          "title": "This array lists the diodes of the photovoltaic module. They are used to bypass shaded cells which would otherwise dissipate energy.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/decentral",
                "description": "The id is used to connect this specific diode to other parts of the module."
              },
              "diodeType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The type of the diode."
              }
            },
            "additionalProperties": false,
            "required": ["id", "diodeType"]
          },
          "minItems": 0
        },
        "connectionTypes": {
          "title": "The types of connections between subcomponents of the module",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents a type of connections which is used in the the module."
              },
              "description": {
                "type": "string",
                "description": "This string can explain the connection type to humans."
              },
              "resistancePerLength": {
                "$ref": "number.json#/$defs/ohmPerMeterWithUncertainty",
                "description": "The electric resistance of the connection per length of the connection in ohms per meter."
              },
              "colorReflectance": {
                "$ref": "opticalData.json#/$defs/colorReflectance",
                "description": "Color reflected by the connection"
              }
            },
            "additionalProperties": false,
            "minProperties": 1,
            "required": []
          },
          "minItems": 0
        },
        "connectionPattern": {
          "$ref": "#/$defs/connections/$defs/category",
          "description": "Whether the connections are in series or parallel"
        },
        "connections": {
          "$ref": "#/$defs/connections/$defs/bidirectional",
          "description": "The connections between cells and between cells and diodes."
        },
        "electricConfiguration": {
          "type": "object",
          "properties": {
            "junctionBoxTypes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The id represents one type of junction boxes which is used in the the photovoltaic module."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the junctionBox."
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "required": []
              },
              "minItems": 1
            },
            "cableTypes": {
              "title": "The connection cables are outside of the photovoltaic module to connect it to other photovoltaic modules.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The id represents a type of connection cables."
                  },
                  "crossSection": {
                    "$ref": "number.json#/$defs/squareMillimeterWithUncertainty",
                    "description": "The cross-sectional area of the connection cable in square millimeters."
                  },
                  "length": {
                    "type": "object",
                    "properties": {
                      "positive": {
                        "$ref": "number.json#/$defs/meterWithUncertainty",
                        "description": "The length of the connection cable with the electric plus sign."
                      },
                      "negative": {
                        "$ref": "number.json#/$defs/meterWithUncertainty",
                        "description": "The length of the connection cable with the electric minus sign."
                      }
                    },
                    "additionalProperties": false,
                    "minProperties": 1,
                    "required": []
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "required": []
              },
              "minItems": 1
            },
            "connectorTypes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The id represents the type of connector with which the connection cable is connected to another photovoltaic module."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the connector type."
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "required": []
              },
              "minItems": 1
            },
            "connectors": {
              "type": "array",
              "items": {
                "title": "Each connector is an instance of a connectorType and receives its own id. It is connected via a cableType and a junctionBoxType to the photovoltaic module.",
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The id represents a specific junction box of the photovoltaic module."
                  },
                  "connectorType": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The type of junction box."
                  },
                  "cableType": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The type of junction box."
                  },
                  "junctionBoxType": {
                    "$ref": "identifier.json#/$defs/centralOrDecentral",
                    "description": "The type of junction box."
                  }
                },
                "additionalProperties": false,
                "required": ["id"]
              },
              "minItems": 1
            },
            "groundingNecessary": {
              "type": "boolean",
              "description": "Whether one side of the module needs to be connected to the ground."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "frame": {
          "title": "Photovoltaic modules often have a frame which increases the mechanical stability of the module.",
          "type": "object",
          "properties": {
            "material": {
              "$ref": "material.json",
              "description": "The material of the layer"
            },
            "materialProperties": {
              "$ref": "material.json#/$defs/characteristics",
              "description": "All properties which depend on the material in general and not on the specific component."
            },
            "colorReflectance": {
              "$ref": "opticalData.json#/$defs/colorReflectance",
              "description": "Color reflected by the frame."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "moduleProperties": {
          "type": "object",
          "properties": {
            "power": {
              "type": "object",
              "properties": {
                "nominal": {
                  "$ref": "number.json#/$defs/wattWithUncertainty",
                  "description": "The nominal power is measured at the maximum power point of the module under standard test conditions."
                },
                "temperatureCoefficient": {
                  "description": "When the temperature increases compared to standard test conditions, the nominal power changes. The temperature coefficient has the unit percent per Kelvin (%/K) to quantify this change.",
                  "$ref": "number.json#/$defs/percentPerKelvin"
                },
                "guarantees": {
                  "title": "Whether a guarantee is available specifically for the nominal power of the module. It is defined by fractions of the nominal power until a certain number of of years. For example, `years`=10 and `percentage`=90 means that 10 year old modules have at least 90% of their nominal power. `percentage`=0 means that no guarantee for the power is provided.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "years": {
                        "$ref": "number.json#/$defs/nonNegativeNumber",
                        "description": "The amount of years until which a certain minimum percentage of the nominal power is guaranteed"
                      },
                      "percentage": {
                        "$ref": "number.json#/$defs/nonNegativeNumber",
                        "description": "The fraction of the nominal power in percent which is guaranteed as minimum after the amount of `years`."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["years", "percentage"]
                  },
                  "minItems": 1
                },
                "angleDependency": {
                  "title": "The nominal power usually depends on the direction of irradiance. In general, the `incidenceDirectionModifier` can characterize this dependency on the direction.  ",
                  "oneOf": [
                    {
                      "title": "The Incidence Angle Modifier (IAM) is used if the nominal power of the module depends only on the polar angle of the incidence and not on the azimuth angle (`azimuthalAngleInvariance`).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "incidence": {
                            "$ref": "number.json#/$defs/degree",
                            "description": "The incidence angle in degree"
                          },
                          "IAM": {
                            "$ref": "number.json#/$defs/nonNegativeNumber",
                            "description": "The value of the incidence angle modifier at the angle defined by `incidence`."
                          }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "required": []
                      }
                    },
                    {
                      "title": "If the nominal power depends on the azimuth angle of the incidence (no `azimuthalAngleInvariance`), then this section can be used to describe the dependency of the nominal power from the direction of incidence (Incidence Direction Modifier).",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "direction": {
                            "$ref": "opticalData.json#/$defs/incidenceDirection",
                            "description": "The direction of the incident radiation."
                          },
                          "modifier": {
                            "$ref": "number.json#/$defs/nonNegativeNumber",
                            "description": "For the direction above, this `modifier` can be multiplied with the nominal power to determine the power at a this direction of incidence."
                          }
                        },
                        "additionalProperties": false,
                        "required": ["direction", "modifier"]
                      }
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "voltage": {
              "type": "object",
              "properties": {
                "nominal": {
                  "$ref": "number.json#/$defs/voltWithUncertainty",
                  "description": "The nominal voltage is measured at the maximum power point of the module under standard test conditions."
                },
                "openCircuit": {
                  "$ref": "number.json#/$defs/voltWithUncertainty",
                  "description": "The open circuit voltage is measured under standard test conditions without connecting the module to an electric circuit."
                },
                "temperatureCoefficient": {
                  "$ref": "number.json#/$defs/percentPerKelvin",
                  "description": "When the temperature increases compared to standard test conditions, the open circuit voltage changes. The temperature coefficient has the unit percent per Kelvin (%/K) to quantify this change."
                },
                "maximumSystem": {
                  "$ref": "number.json#/$defs/volt",
                  "description": "The voltage of a photovoltaic system made with these modules should stay below this maximum system voltage."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "current": {
              "type": "object",
              "properties": {
                "nominal": {
                  "$ref": "number.json#/$defs/ampereWithUncertainty",
                  "description": "The nominal current is measured at the maximum power point of the module under standard test conditions."
                },
                "shortCircuit": {
                  "$ref": "number.json#/$defs/ampereWithUncertainty",
                  "description": "The short circuit current is measured under standard test conditions with the module connected to an electric circuit which has an electric resistance of zero."
                },
                "temperatureCoefficient": {
                  "$ref": "number.json#/$defs/percentPerKelvin",
                  "description": "When the temperature increases compared to standard test conditions, the short circuit current changes. The temperature coefficient has the unit percent per Kelvin (%/K) to quantify this change."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "currentVoltage": {
              "type": "array",
              "items": {
                "$ref": "common.json#/$defs/currentVoltage",
                "description": "The current-voltage characteristic is important to calculate the photovoltaic performance for conditions other than the standard test conditions."
              },
              "minItems": 1
            },
            "fillFactor": {
              "$ref": "number.json#/$defs/numberBetweenZeroAndOne",
              "description": "The fill factor is a measure of quality of a solar cell. It is the power at the maximum powerpoint divided by the open circuit voltage and the short circuit current."
            },
            "efficiency": {
              "$ref": "number.json#/$defs/numberBetweenZeroAndOne",
              "description": "The effiency of the module is measured at standard test conditions."
            },
            "safety": {
              "title": "Data about the safety of photovoltaic modules.",
              "type": "object",
              "properties": {
                "fire": {
                  "title": "The fire safety class of the photovoltaic module depending on the region for which the class is valid.",
                  "type": "object",
                  "properties": {
                    "EN": {
                      "title": "The fire safety class according to the regulations of the European Union. EN 13501-1 defines the categories as well as the additional classification for smoke development and burning drops falling from the component.",
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "string",
                          "enum": [
                            "A1",
                            "A1_L",
                            "A1_fl",
                            "A2",
                            "A2_L",
                            "A2_fl",
                            "B",
                            "B_L",
                            "B_fl",
                            "C",
                            "C_L",
                            "C_fl",
                            "D",
                            "D_L",
                            "D_fl",
                            "E",
                            "E_L",
                            "E_fl",
                            "F"
                          ],
                          "description": "The fire safety class according to EN 13501-1"
                        },
                        "smoke": {
                          "type": "string",
                          "enum": ["s1", "s2", "s3"],
                          "description": "Abbreviations for smoke according to EN 13501-1."
                        },
                        "drops": {
                          "type": "string",
                          "enum": ["d0", "d1", "d2"],
                          "description": "Abbreviations for burning drops according to EN 13501-1."
                        }
                      },
                      "additionalProperties": false,
                      "minProperties": 1,
                      "required": []
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1,
                  "required": []
                },
                "mechanical": {
                  "title": "Mechanical load tests verify that a module can withstand wind and snow.",
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pressure": {
                            "type": "object",
                            "properties": {
                              "rated": {
                                "$ref": "number.json#/$defs/pascal",
                                "description": "The maximum rated pressure in Pascal."
                              },
                              "tested": {
                                "$ref": "number.json#/$defs/pascal",
                                "description": "The maximum tested pressure in Pascal."
                              }
                            },
                            "additionalProperties": false,
                            "minProperties": 1,
                            "required": []
                          },
                          "suction": {
                            "type": "object",
                            "properties": {
                              "rated": {
                                "$ref": "number.json#/$defs/pascal",
                                "description": "The maximum rated suction in Pascal."
                              },
                              "tested": {
                                "$ref": "number.json#/$defs/pascal",
                                "description": "The maximum tested suction in Pascal."
                              }
                            },
                            "additionalProperties": false,
                            "minProperties": 1,
                            "required": []
                          },
                          "reference": {
                            "$ref": "common.json#/$defs/reference",
                            "description": "Reference for examplt to the standard according to which the mechanical test was performed"
                          }
                        },
                        "additionalProperties": false,
                        "minProperties": 2,
                        "required": ["reference"]
                      },
                      "minItems": 1
                    },
                    {
                      "type": "string",
                      "const": "noPerformanceDetermined",
                      "description": "`noPerformanceDetermined` means that no tests of the mechanical loads are available."
                    }
                  ]
                },
                "hail": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "$ref": "common.json#/$defs/reference",
                            "description": "If the photovoltaic module passed a hail test, then the reference can refer for example to a standard according to which the test was performed."
                          }
                        },
                        "additionalProperties": false,
                        "required": ["reference"]
                      },
                      "minItems": 1
                    },
                    {
                      "type": "string",
                      "const": "noPerformanceDetermined",
                      "description": "`noPerformanceDetermined` means that no hail test results are available."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "temperatures": {
              "title": "The operating temperatures.",
              "type": "object",
              "properties": {
                "minimum": {
                  "$ref": "number.json#/$defs/kelvin",
                  "description": "The minimum operating temperature in Kelvin (K)."
                },
                "operating": {
                  "$ref": "number.json#/$defs/kelvin",
                  "description": "The operating temperature of the cells under standard test conditions and in Kelvin (K)."
                },
                "maximum": {
                  "$ref": "number.json#/$defs/kelvin",
                  "description": "The maximum operating temperature in Kelvin (K)."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "guarantees": {
              "title": "General guarantee. It is defined by the number of years and can refer to a publication or standard for details. `years`=0 means that no guarantee is provided. It is an array so that references for different number of years can be defined.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "years": {
                    "$ref": "number.json#/$defs/nonNegativeNumber",
                    "description": "The years for which the manufacturer offers a guarantee for this module."
                  },
                  "reference": {
                    "$ref": "common.json#/$defs/reference",
                    "description": "Details of the guarantee."
                  }
                },
                "additionalProperties": false,
                "required": ["years"]
              },
              "minItems": 1
            },
            "uValue": {
              "$ref": "calorimetricData.json#/$defs/uValue",
              "description": "The U value, also known as thermal transmittance, characterizes the rate of heat transfer through this photovoltaic module."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        }
      },
      "additionalProperties": false,
      "minProperties": 1,
      "required": []
    },
    "inverter": {
      "title": "Usually, an inverter is used to convert the direct current of the modules into alternating current (AC).",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "identifier.json#/$defs/centralOrDecentral",
          "description": "The id represents the inverter."
        },
        "trackerNumber": {
          "$ref": "number.json#/$defs/nonNegativeInteger",
          "description": "The number of maximum-power-point (MPP) trackers which the inverter provides."
        },
        "inputNumber": {
          "$ref": "number.json#/$defs/nonNegativeInteger",
          "description": "The number of direct current input ports which the inverter provides. To each input port, one string of photovoltaic modules can be connected."
        },
        "power": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "maximum": {
                  "$ref": "number.json#/$defs/watt",
                  "description": "The maximum input power from the photovoltaic modules to the inverter in watts."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "output": {
              "type": "object",
              "properties": {
                "nominal": {
                  "$ref": "number.json#/$defs/wattWithUncertainty",
                  "description": "The nominal output power of the inverter in watts."
                },
                "maximum": {
                  "$ref": "number.json#/$defs/watt",
                  "description": "The maximum output power of the inverter in watts."
                },
                "normalized": {
                  "$ref": "number.json#/$defs/nonNegativeNumber",
                  "description": "The output power at maximum efficiency divided by the nominal output power. It is a number without units."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "demand": {
              "type": "object",
              "properties": {
                "night": {
                  "$ref": "number.json#/$defs/wattWithUncertainty",
                  "description": "The power demand of the inverter at night in watts."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "voltage": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "minimum": {
                  "$ref": "number.json#/$defs/volt",
                  "description": "When the input voltage decreases below this value, the inverter switches from operation into standby."
                },
                "start": {
                  "$ref": "number.json#/$defs/volt",
                  "description": "When the input voltage increase above this value, the inverter switches from standby to operation."
                },
                "maximum": {
                  "$ref": "number.json#/$defs/volt",
                  "description": "The maximum input voltage for the inverter."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "output": {
              "type": "object",
              "properties": {
                "frequency": {
                  "type": "object",
                  "properties": {
                    "minimum": {
                      "$ref": "number.json#/$defs/hertz",
                      "description": "The minimum frequency of the alternating current output of the inverter in hertz."
                    },
                    "maximum": {
                      "$ref": "number.json#/$defs/hertz",
                      "description": "The maximum frequency of the alternating current output of the inverter in hertz."
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1,
                  "required": []
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "current": {
          "type": "object",
          "properties": {
            "input": {
              "type": "object",
              "properties": {
                "maximum": {
                  "$ref": "number.json#/$defs/ampere",
                  "description": "The maximum input current for the inverter in amperes."
                },
                "shortCircuit": {
                  "$ref": "number.json#/$defs/ampere",
                  "description": "The maximum short circuit current of the the inverter in amperes."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            },
            "output": {
              "type": "object",
              "properties": {
                "nominal": {
                  "$ref": "number.json#/$defs/ampere",
                  "description": "The nominal alternating current output current of the inverter in amperes."
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "safety": {
          "title": "Data about the safety of the inverter.",
          "type": "object",
          "properties": {
            "electric": {
              "title": "The electric safety of the inverter.",
              "type": "object",
              "properties": {
                "IPcode": {
                  "title": "The electric safety according to the International Protection Marking, also called Ingress Protection Marking, with codes between IPXX and IP69K.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "standard": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": ["EN IEC 60529", "ISO 20653"],
                          "description": "`EN IEC 60529` and `ISO 20653` indicate the standard according to which the IP code is defined."
                        },
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 2
                      },
                      "firstDigit": {
                        "type": "string",
                        "enum": [
                          "X",
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "5K",
                          "6",
                          "6K"
                        ],
                        "description": "The first digit of the IP code represents the the protection against solid particles."
                      },
                      "secondDigit": {
                        "type": "string",
                        "enum": [
                          "X",
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "5K",
                          "6",
                          "6K",
                          "7",
                          "8",
                          "9",
                          "9K"
                        ],
                        "description": "The second digit of the IP code represents the protection against liquid ingress."
                      },
                      "thirdDigit": {
                        "type": "string",
                        "enum": ["A", "B", "C", "D"],
                        "description": "The third digit is optional and represents the access to dangerous active parts."
                      },
                      "fourthDigit": {
                        "type": "string",
                        "enum": ["f", "H", "M", "S", "W"],
                        "description": "The fourth digit can include additional information."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["firstDigit", "secondDigit"]
                  },
                  "minItems": 1
                },
                "applianceClass": {
                  "title": "The appliance protection classes states which protective-earth connection requirements are fulfilled.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "standard": {
                        "type": "string",
                        "const": "IEC 61140",
                        "description": "`IEC 61140` indicates the standard according to which the appliance class is defined."
                      },
                      "class": {
                        "type": "string",
                        "enum": ["0", "I", "0I", "II", "III"],
                        "description": "The appliance class."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["standard", "class"]
                  },
                  "minItems": 1
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "required": []
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "temperatures": {
          "title": "The operating temperatures.",
          "type": "object",
          "properties": {
            "minimum": {
              "$ref": "number.json#/$defs/kelvin",
              "description": "The minimum ambient temperature in Kelvin (K) for the inverter to operate."
            },
            "maximum": {
              "$ref": "number.json#/$defs/kelvin",
              "description": "The maximum ambient temperature in Kelvin (K) for the inverter to operate."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "efficiencies": {
          "type": "object",
          "properties": {
            "maximum": {
              "$ref": "common.json#/$defs/efficiencies/$defs/inverter",
              "description": "The maximum efficiency of this inverter. The efficiency has no units."
            },
            "European": {
              "$ref": "common.json#/$defs/efficiencies/$defs/inverter",
              "description": "The efficiency of this inverter according to the european regulations. The efficiency has no units."
            }
          },
          "additionalProperties": false,
          "minProperties": 1,
          "required": []
        },
        "transformer": {
          "type": "boolean",
          "description": "It is important to know if the inverter uses a transformer or not. Usually, photovoltaic modules which need to be grounded also need an inverter which use a transformer."
        }
      },
      "additionalProperties": false,
      "minProperties": 1,
      "required": []
    },
    "system": {
      "title": "A photovoltaic (photovoltaic) system consists of photovoltaic modules which are connected and turn irradiance into electric power.",
      "type": "object",
      "properties": {
        "modules": {
          "title": "The modules of the photovoltaic system",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/decentral",
                "description": "The id is used to connect this module to other parts of the system."
              },
              "moduleType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents one type of photovoltaic modules."
              }
            },
            "additionalProperties": false,
            "required": ["id"]
          },
          "minItems": 1
        },
        "diodeTypes": {
          "title": "The type of diodes which are used in the system",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents a type of diodes which is used in the system."
              },
              "description": {
                "type": "string",
                "description": "This string can explain the diode type to humans."
              }
            },
            "additionalProperties": false,
            "minProperties": 1,
            "required": []
          },
          "minItems": 1
        },
        "diodes": {
          "title": "The diodes between the modules of this photovoltaic system. The diodes are used to bypass shaded modules which would otherwise dissipate energy.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/decentral",
                "description": "The id is used to connect this specific diode to other parts of the system."
              },
              "diodeType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The type of the diode."
              }
            },
            "additionalProperties": false,
            "required": ["id", "diodeType"]
          },
          "minItems": 1
        },
        "connectionTypes": {
          "title": "The type of electric connections between the modules, diodes and inverters of this photovoltaic system.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The id represents a type of diodes which is used in the system."
              },
              "description": {
                "type": "string",
                "description": "This string can explain the connection type to humans."
              },
              "crossSection": {
                "$ref": "number.json#/$defs/squareMillimeter",
                "description": "The cross-sectional area of the connection cable in square millimeters."
              },
              "resistancePerLength": {
                "$ref": "number.json#/$defs/ohmPerMeterWithUncertainty",
                "description": "The electric resistance of the connection per length of the connection in ohms per meter."
              },
              "colorReflectance": {
                "$ref": "opticalData.json#/$defs/colorReflectance",
                "description": "Color reflected by the connection."
              }
            },
            "additionalProperties": false,
            "minProperties": 1,
            "required": []
          },
          "minItems": 1
        },
        "connections": {
          "$ref": "#/$defs/connections/$defs/bidirectional",
          "description": "The connections between the modules, diodes and inverters of this photovoltaic system."
        },
        "grounding": {
          "$ref": "#/$defs/connections/$defs/grounding",
          "description": "The connections between the module and the ground."
        },
        "inverters": {
          "title": "Usually, one inverter converts the direct current of the modules into alternating current. But also several inverters could be used.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/inverter",
            "description": "One inverter."
          },
          "minItems": 1
        }
      },
      "additionalProperties": false,
      "minProperties": 1,
      "required": []
    },
    "connections": {
      "$defs": {
        "bidirectional": {
          "title": "Connections between two components without defining a direction for these connections.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "connectionType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The type of the connection."
              },
              "id1": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "Id1 represents the first component which is connected to the component represented by id2."
              },
              "id2": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "Id1 represents the second component which is connected to the component represented by id1."
              },
              "length": {
                "$ref": "number.json#/$defs/numberWithUncertainty",
                "description": "The length of this connection in meters."
              },
              "electric": {
                "type": "object",
                "properties": {
                  "resistance": {
                    "$ref": "number.json#/$defs/ohmWithUncertainty",
                    "description": "The electric resistance of the connection in ohms."
                  }
                }
              }
            },
            "additionalProperties": false,
            "required": ["id1", "id2"]
          },
          "minItems": 1
        },
        "category": {
          "type": "string",
          "enum": ["parallel", "series", "complex"],
          "description": "The electric connection can either be in parallel or in series or a more complex pattern."
        },
        "grounding": {
          "title": "Electric connections between components and the ground.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "connectionType": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "The type of the connection."
              },
              "length": {
                "$ref": "number.json#/$defs/numberWithUncertainty",
                "description": "The length of this connection in meters."
              },
              "electric": {
                "type": "object",
                "properties": {
                  "resistance": {
                    "$ref": "number.json#/$defs/ohmWithUncertainty",
                    "description": "The electric resistance of the connection in ohms."
                  }
                }
              },
              "id1": {
                "$ref": "identifier.json#/$defs/centralOrDecentral",
                "description": "Id1 represents the component which is connected to the ground."
              },
              "grounding": {
                "type": "string",
                "enum": ["plus", "minus", "neither"],
                "description": "Whether the electric plus or minus of the component is connected to the ground."
              }
            },
            "additionalProperties": false,
            "required": ["id1", "grounding"]
          },
          "minItems": 1
        }
      }
    }
  },
  "$ref": "#/$defs/data"
}
